import {
  collection,
  doc,
  onSnapshot,
  orderBy,
  query,
  serverTimestamp,
  updateDoc,
} from "firebase/firestore";
import Head from "next/head";
import Link from "next/link";
import { useEffect, useState } from "react";
import Message from "../components/message";
import { auth, db } from "../utils/firebase";
import { BsSuitHeart, BsSuitHeartFill } from "react-icons/bs";

export default function Home() {
  // Create a state with all the posts
  const [allPosts, setAllPosts] = useState([]);

  const getPosts = async () => {
    const collectionRef = collection(db, "posts");
    const q = query(collectionRef, orderBy("timestamp", "desc"));
    const data = onSnapshot(q, (snapshot) => {
      setAllPosts(snapshot.docs.map((doc) => ({ ...doc.data(), id: doc.id })));
    });

    return data;
  };

  const like = async (post) => {
    post.liked = !post.liked;

    const liked = post.liked;
    const docRef = doc(db, "posts", post.id);
    const updatedPost = {
      ...post,
      updatedAt: serverTimestamp(),
    };
    console.log(updatedPost);
    await updateDoc(docRef, updatedPost);
  };

  useEffect(() => {
    getPosts();
  }, []);

  return (
    <>
      <Head>
        <title>
          Blogri {auth.currentUser ? `- ${auth.currentUser.displayName}` : ""}
        </title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="text-lg font-medium mb-6">
        <h1 className="dark:text-sky-100">Bejegyzések</h1>
        {allPosts.map((post) => (
          <Message {...post} key={post.id}>
            <div
              className={`flex ${
                auth.currentUser ? "justify-between" : "justify-end"
              } gap-2`}
            >
              {auth.currentUser && (
                <button className="text-lg" onClick={() => like(post)}>
                  {post?.liked > 0 ? <BsSuitHeartFill className="text-red-400" /> : <BsSuitHeart />}
                </button>
              )}
              <Link href={{ pathname: `/${post.id}`, query: { ...post } }}>
                <button className="text-sm">
                  Hozzászólások (
                  {post.comments?.length > 0 ? post.comments?.length : 0})
                </button>
              </Link>
            </div>
          </Message>
        ))}
      </div>
    </>
  );
}
